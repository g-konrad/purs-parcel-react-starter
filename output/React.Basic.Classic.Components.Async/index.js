// Generated by purs version 0.14.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var React_Basic = require("../React.Basic/index.js");
var React_Basic_Classic = require("../React.Basic.Classic/index.js");
var component = React_Basic_Classic.createComponent("Async");
var asyncWithLoader = function (loader) {
    var render = function (self) {
        return Data_Maybe.fromMaybe(loader)(self.state.jsx);
    };
    var kill = (function () {
        var $8 = Effect_Aff.killFiber(Effect_Exception.error("Cancelled"));
        return function ($9) {
            return Effect_Aff.launchAff_($8($9));
        };
    })();
    var launch = function (self) {
        return function __do() {
            var fiber = Effect_Aff.launchAff(Control_Bind.bind(Effect_Aff.bindAff)(self.props)(function (jsx) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(self.setState(function (v) {
                    var $2 = {};
                    for (var $3 in v) {
                        if ({}.hasOwnProperty.call(v, $3)) {
                            $2[$3] = v[$3];
                        };
                    };
                    $2.jsx = new Data_Maybe.Just(jsx);
                    return $2;
                }));
            }))();
            return self.setStateThen(function (v) {
                var $5 = {};
                for (var $6 in v) {
                    if ({}.hasOwnProperty.call(v, $6)) {
                        $5[$6] = v[$6];
                    };
                };
                $5.jsx = Data_Maybe.Nothing.value;
                $5.pendingFiber = fiber;
                return $5;
            })(kill(self.state.pendingFiber))();
        };
    };
    var initialState = {
        jsx: Data_Maybe.Nothing.value,
        pendingFiber: Control_Applicative.pure(Effect_Aff.applicativeFiber)(Data_Unit.unit)
    };
    var cleanup = function (self) {
        return kill(self.state.pendingFiber);
    };
    return React_Basic_Classic.make()(component)({
        initialState: initialState,
        render: render,
        didMount: launch,
        willUnmount: cleanup
    });
};
var async = asyncWithLoader(React_Basic.empty);
module.exports = {
    async: async,
    asyncWithLoader: asyncWithLoader
};
